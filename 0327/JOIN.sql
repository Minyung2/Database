-- JOIN
-- CASTESIAN PRODUCT 카티션 곱, 상호조인
SELECT * FROM EMP;
SELECT * FROM DEPT;
SELECT * FROM EMP A CROSS JOIN DEPT B;

-- INNER JOIN
SELECT E.EMPNO, E.ENAME, E.JOB, D.DNAME FROM EMP E INNER JOIN DEPT D ON E.DEPTNO=D.DEPTNO WHERE E.JOB='CLERK';

SELECT E.EMPNO,E.ENAME,E.JOB,D.DNAME FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO AND E.JOB='CLERK';

-- FULL OUTER JOIN
SELECT E.*,D.* FROM EMP E FULL OUTER JOIN DEPT D ON E.DEPTNO = D.DEPTNO;

-- LEFT OUTER JOIN
SELECT E.*,D.* FROM EMP E LEFT OUTER JOIN DEPT D ON E.DEPTNO = D.DEPTNO;
	
-- RIGHT OUTER JOIN
SELECT E.*, D.*
FROM EMP E RIGHT OUTER JOIN DEPT D ON E.DEPTNO = D.DEPTNO ;

SELECT e.*, d.*
FROM emp e, dept d WHERE e.deptno(+)=d.DEPTNO ;

-- SELF JOIN
SELECT A.EMPNO, A.ENAME,A.JOB,A.MGR,D.DEPTNO ,
D.DNAME ,
B.EMPNO,B.ENAME, B.JOB
FROM EMP A, EMP B, DEPT D 
WHERE A.DEPTNO =D.DEPTNO 
AND A.MGR=B.EMPNO ;

SELECT A.EMPNO, A.ENAME, A.JOB, A.MGR, D.DEPTNO, D.DNAME, B.EMPNO, B.ENAME, B.JOB
FROM EMP A
INNER JOIN EMP B ON A.MGR = B.EMPNO
INNER JOIN DEPT D ON A.DEPTNO = D.DEPTNO;


SELECT A.EMPNO, A.ENAME, A.JOB , A.MGR 
,B.EMPNO ,B.ENAME,B.JOB
FROM EMP A, EMP B
WHERE A.MGR=B.EMPNO;

/*
 * SUB QUERY 서브쿼리
 * SELECT / FROM / WHERE
 * */

-- SELECT 결과가 반드시 단일 행 단일 값
SELECT E.ENAME, (SELECT D.DNAME FROM DEPT D WHERE D.DEPTNO=E.DEPTNO) AS DEPTNAME 
FROM EMP E WHERE E.JOB='MANAGER';

-- FROM INLINE VIEW
SELECT EMP_NAME,SALARY
FROM(SELECT E.ENAME AS EMP_NAME,
E.SAL AS SALARY
FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO AND D.DNAME = 'SALES')
WHERE SALARY BETWEEN 1000 AND 2000;

-- WHERE 단일 행과 무관하게 단일 컬럼으로 리턴
SELECT * FROM DEPT D
WHERE D.DEPTNO IN(SELECT E.DEPTNO FROM EMP E WHERE E.SAL>2000);
SELECT ENAME, SAL FROM EMP WHERE SAL > (SELECT AVG(SAL) FROM EMP);

SELECT ENAME,SAL FROM EMP WHERE SAL>ALL(SELECT SAL FROM EMP WHERE DEPTNO=30);
SELECT ENAME,SAL FROM EMP WHERE SAL>ANY(SELECT SAL FROM EMP WHERE DEPTNO=30);

SELECT D.DNAME FROM DEPT D WHERE EXISTS(SELECT E.ENAME FROM EMP E WHERE E.DEPTNO=D.DEPTNO AND E.SAL>3000);

--Q1 부서코드, 부서이름, 사원번호, 사원명, 봉급
SELECT D.DEPTNO , D.DNAME , E.EMPNO ,E.ENAME,SAL FROM DEPT d , EMP e
WHERE E.DEPTNO = D.DEPTNO AND E.SAL>2000;

-- Q2 부서별 -> GROUP BY ?
-- 부서코드, 부서명, 급여평균, 최대급여, 최소급여, 부서인원수
SELECT D.DEPTNO, D.DNAME , TRUNC(AVG(E.SAL),1), MAX(E.SAL), MIN(E.SAL), COUNT(*)
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO 
GROUP BY D.DEPTNO, D.DNAME ;


-- Q3 부서별 고용인의 정보
-- 부소코드 부서명 사원번호 이름 직급 봉급
SELECT * FROM emp;
SELECT * FROM DEPT;
SELECT d.DEPTNO ,d.DNAME, e.EMPNO ,e.ENAME ,JOB ,SAL FROM emp e,dept d where e.DEPTNO =d.DEPTNO ORDER BY DEPTNO;

-- Q4 부서별
-- 부서코드 부서명 사번 사원명 관리자사번 관리자명
-- 해당사원의급여등급 등급최저급여 등급 최고급여
SELECT * FROM emp;
SELECT d.DEPTNO ,d.DNAME, e.ENAME, e.mgr, (SELECT ename FROM emp e2 WHERE e.mgr=e2.EMPNO), s.GRADE ,s.HISAL ,s.LOSAL  
FROM emp e, dept d WHERE e.DEPTNo=d.DEPTNO JOIN SALGRADE s ON e.SAL BETWEEN s.LOSAL AND s.HISAL;

SELECT d.DEPTNO, d.DNAME, e.ENAME, e.mgr, 
  (SELECT ename FROM emp e2 WHERE e.mgr=e2.EMPNO),
  s.GRADE, s.HISAL, s.LOSAL
FROM emp e
JOIN dept d ON e.DEPTNO = d.DEPTNO 
JOIN SALGRADE s ON e.SAL BETWEEN s.LOSAL AND s.HISAL;
 

--SELECT d.DEPTNO , d.DNAME , e.EMPNO , e.ENAME , e.MGR , m.ENAME , e.SAL ,
--          s.GRADE , s.LOSAL , s.HISAL 
--FROM EMP e JOIN DEPT d ON e.DEPTNO = d.DEPTNO
--LEFT JOIN EMP m ON e.MGR = m.EMPNO JOIN SALGRADE s ON e.SAL BETWEEN s.LOSAL AND s.HISAL;   

SELECT r1.deptno, r1.dname, r1.empno, r1.ename, r1.mgr, r1.sal, r1.mgr_NAME, S.GRADE ,S.LOSAL ,s.HISAL from
(SELECT r0.deptno, r0.dname, r0.empno, r0.ename,r0.mgr, r0.sal, e1.ename mgr_NAME FROM 
(SELECT d0.DEPTNO ,d0.DNAME ,e0.empno,e0.ename,e0.mgr,e0.sal 
FROM dept d0 
LEFT OUTER JOIN emp e0 ON d0.DEPTNO = e0.DEPTNO 
ORDER BY d0.DEPTNO ,e0.ENAME) r0
LEFT OUTER JOIN emp e1 ON r0.mgr=e1.empno) r1 
LEFT OUTER JOIN SALGRADE s ON (r1.sal BETWEEN s.losal AND s.hisal) ORDER BY r1.deptno, r1.empno
;


SELECT e.ENAME  FROM emp e JOIN dept d ON e.DEPTNO =d.DEPTNO AS r ;


-- Q1 ALLEN 사원의 직급과 동일한 사원들의 
-- 직급 사번 사원명 봉급 부서코드 부서명
SELECT e.JOB , e.EMPNO ,e.ENAME ,e.DEPTNO , d.dname FROM emp e 
JOIN dept d ON e.DEPTNO = d.DEPTNO WHERE e.JOB = (SELECT e1.job FROM emp e1 WHERE e1.ename='ALLEN');  


-- Q2 전체 평균 급여보다 많이 받는 사원의
-- 사번 사원명 입사일(YYYY-MM-DD) 부서명 부서위치 급여 급여등급
SELECT * FROM DEPT ;
SELECT e.ename, e.sal,s. grade FROM emp e JOIN SALGRADE s ON e.SAL BETWEEN s.LOSAL AND s.HISAL WHERE e.sal > (SELECT avg(e2.sal) FROM emp e2);

SELECT e.EMPNO ,e.ENAME ,to_char(e.HIREDATE,'YYYY-MM-DD'),e.sal, d.DNAME , d.LOC, s.GRADE 
FROM emp e, dept d, SALGRADE s  
WHERE e.DEPTNO = d.DEPTNO
AND e.SAL BETWEEN s.LOSAL AND s.HISAL
AND e.sal > (SELECT avg(e2.sal) FROM emp e2) ORDER BY e.sal;

-- Q3 10번 부서의 인원 중 30번 부서에 없는 직급을 가진 직원의
-- 사번 사원명 직급 부서코드 부서명 부서위치
SELECT E.EMPNO, E.ENAME, E.JOB, D.DEPTNO, D.DNAME, D.LOC FROM EMP E
LEFT JOIN DEPT D ON E.DEPTNO=D.DEPTNO
WHERE E.DEPTNO = 10 AND E.JOB NOT IN(SELECT JOB FROM EMP WHERE DEPTNO=30);

-- Q4 SALESMAN의 최대급여보다 많이 급여를 받는 사람들의
-- 사번 사원명 급여 급여등급

SELECT MAX(sal) FROM emp e WHERE job='SALESMAN' ORDER BY e.sal; 

SELECT e.EMPNO , e.ENAME , e.sal, s.GRADE  FROM emp e, SALGRADE s WHERE e.sal BETWEEN s.LOSAL AND s.HISAL
AND e.sal>ALL(SELECT sal FROM emp WHERE job='SALESMAN');

SELECT e.EMPNO , e.ENAME , e.sal, s.GRADE  FROM emp e, SALGRADE s WHERE e.sal BETWEEN s.LOSAL AND s.HISAL
AND e.sal>(SELECT MAX(sal) FROM emp WHERE job='SALESMAN') ORDER BY e.sal; 